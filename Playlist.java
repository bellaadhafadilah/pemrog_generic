/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package generic;

import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.io.File;
import java.text.DecimalFormat;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Bella Adha Fadilah
 */
public class Playlist extends javax.swing.JFrame {
    KoleksiMusik koleksi = new KoleksiMusik();
    /**
     * Creates new form Playlist
     */
private void resizeListener(){
    addComponentListener(new ComponentAdapter() {
    @Override
    public void componentResized(ComponentEvent e) {
    resizeColumns();
    }
    });
    }

 private void resizeColumns() {
    float[] columnWidthPercentage = {90.0f,10.0f};
    int tW = tblPlaylist.getWidth();
    TableColumn column;
    TableColumnModel jTableColumnModel = tblPlaylist.getColumnModel();
    int cantCols = jTableColumnModel.getColumnCount();
    for (int i = 0; i < cantCols; i++) {
    column = jTableColumnModel.getColumn(i);
    int pWidth = Math.round(columnWidthPercentage[i] * tW);
    column.setPreferredWidth(pWidth);
    tblPlaylist.setRowHeight(27);
    }
    }
 
 private String extensionOf(File file) {
    String fileExtension="";
    String fileName=file.getName();
    if(fileName.contains(".") && fileName.lastIndexOf(".")!= 0){
    fileExtension =
    fileName.substring(fileName.lastIndexOf(".")+1);
    }
    return fileExtension;
    }
 
private void addFiles(File[] files){
    for (File file : files) {
    String path = file.getAbsolutePath();
    String fn = file.getName();
    String fileName = fn.substring(0, fn.length()-4);
    String fileSize = fileSizeOf(file);
    String extension = "";
    int i = path.lastIndexOf('.');
    if (i > 0) {
    extension = extensionOf(file);
    }
    Musik m = new Musik(path,fileName,fileSize,extension);
    koleksi.add(m);
    }
    }

private void addFolder(File dir){
    File[] listOfFiles = dir.listFiles();
    for (File listOfFile : listOfFiles) {
    if (listOfFile.isFile()) {
    String path = listOfFile.getAbsolutePath();
    String fn = listOfFile.getName();
    String fileName = fn.substring(0, fn.length()-4);
    String fileSize = fileSizeOf(listOfFile);
    String extension;
    int i = path.lastIndexOf('.');
    if (i > 0) {
    extension = extensionOf(listOfFile);
    if("mp3".equalsIgnoreCase(extension)){
    Musik m = new
    Musik(path,fileName,fileSize,extension);
    koleksi.add(m);
    }
    }
    } else if (listOfFile.isDirectory()) {
    addFolder(listOfFile);
    }
    }
    }

    public Playlist() {
        initComponents();
        tblPlaylist.setModel(koleksi); //mengatur model tabel
        resizeColumns(); //mengubah ukuran kolom pada tabel
        resizeListener(); // melakukan resize otomatis ketika jendela aplikasi di-resize
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupTombol = new javax.swing.JPopupMenu();
        addFiles = new javax.swing.JMenuItem();
        addFolder = new javax.swing.JMenuItem();
        clearPlayList = new javax.swing.JMenuItem();
        pnFooter = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPlayList = new javax.swing.JTable();
        btnPlayList = new javax.swing.JButton();

        addFiles.setText("Add File(s)");

        addFolder.setText("Add Folder");

        clearPlayList.setText("Clear Playlist");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblPlayList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblPlayList);

        javax.swing.GroupLayout pnFooterLayout = new javax.swing.GroupLayout(pnFooter);
        pnFooter.setLayout(pnFooterLayout);
        pnFooterLayout.setHorizontalGroup(
            pnFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        pnFooterLayout.setVerticalGroup(
            pnFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnFooterLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 132, Short.MAX_VALUE))
        );

        btnPlayList.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnPlayList.setText("PlayList");
        btnPlayList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnFooter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(btnPlayList, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(291, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnFooter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPlayList)
                .addGap(0, 23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPlayListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayListActionPerformed
        popupTombol.show(btnPlaylist,
                btnPlaylist.getWidth(),
                btnPlaylist.getHeight()/2);
    }//GEN-LAST:event_btnPlayListActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Playlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Playlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Playlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Playlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Playlist().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem addFiles;
    private javax.swing.JMenuItem addFolder;
    private javax.swing.JButton btnPlayList;
    private javax.swing.JMenuItem clearPlayList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnFooter;
    private javax.swing.JPopupMenu popupTombol;
    private javax.swing.JTable tblPlayList;
    // End of variables declaration//GEN-END:variables

    private String fileSizeOf(File file) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
